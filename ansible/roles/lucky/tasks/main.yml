---
- name: "Clone {{ app_name }} repository"
  register: repository_clone_result
  git:
    repo: "{{ app_git_url }}"
    dest: "{{ app_directory }}"
    version: "{{ app_git_default_branch }}"
    force: yes

- name: "Check Crystal app dependencies"
  register: shard_check_result
  changed_when: false
  failed_when: false
  command:
    chdir: "{{ app_directory }}"
    cmd: shards check --production

# We only run this step when the `shards check` command fails,
# which means some dependencies are out of date.
- name: "Install Crystal app dependencies"
  when: "shard_check_result.rc == 1"
  command:
    chdir: "{{ app_directory }}"
    cmd: shards install --quiet --production

- name: "Check Yarn app dependencies"
  register: yarn_check_result
  changed_when: false
  failed_when: false
  command:
    chdir: "{{ app_directory }}"
    cmd: yarn check --silent

# We only run this step when the `yarn check` command fails,
# which means some dependencies are out of date.
- name: "Install Yarn app dependencies"
  when: "yarn_check_result.rc == 1"
  command:
    chdir: "{{ app_directory }}"
    cmd: yarn install --silent --non-interactive

# Build JS assets when the checked out code git revision has changed,
# which means that new code is present that could include asset changes.
- name: "Build application JS assets"
  register: js_build_result
  when: "repository_clone_result.changed"
  command:
    chdir: "{{ app_directory }}"
    cmd: yarn prod

# Build the app binary when the checked out code git revision has changed,
# since there's the chance that Crystal code has been modified.
- name: "Build Lucky binary"
  register: binary_result
  when: "repository_clone_result.changed"
  command:
    chdir: "{{ app_directory }}"
    cmd: crystal build --release src/start_server.cr -o start_server
